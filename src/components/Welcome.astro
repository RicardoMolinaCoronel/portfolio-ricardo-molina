---
import astroLogo from '../assets/astro.svg';
import background from '../assets/background.svg';
import LinkedInIcon from '../icons/LinkedIn.astro';
import GitHubIcon from '../icons/GitHub.astro';
import ReactIcon from '../icons/React.astro';
import AstroIcon from '../icons/technologies/Astro.astro';
import PenIcon from '../icons/Pen.astro';
import PCIcon from '../icons/PC.astro';
import RosetteIcon from '../icons/Rosette.astro';
import DeskIcon from '../icons/Desk.astro';
import MainIcons from './MainIcons.astro';
import ToolPills from './ToolsPill.astro';
import Experience from './Experience.astro';
import SectionContainer from './SectionContainer.astro';
import CodeIcon from '../icons/Code.astro';
import Projects from './Projects.astro';
import Education from './Education.astro';
import Contact from './Contact.astro';
import Technologies from './Technologies.astro';
import Achievements from './Achievements.astro';
import MainButton from './MainButton.astro';
import { useTranslations, getLangFromUrl } from '../utils/i18n';

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
---

<div id="section-label"
     class="fixed left-1/16 top-9/12 -translate-y-1/2 z-50 hidden lg:block
            text-lg tracking-widest font-bold rotate-[-90deg] origin-left pl-4
            text-white transition-all duration-500 ease-in-out">
  <span class="transition-all duration-500 ease-in-out block opacity-100 translate-y-0 text-6xl font-semibold dark:text-gray-500/50 text-gray-400/60">
    
  </span>
</div>



	<main class="lg:px-60 px-6">
		 <SectionContainer id="home" data-label=" "class="pt-25 lg:pt-10 min-h-[calc(100vh-10rem)] flex flex-col-reverse w-full lg:flex-row lg:justify-between items-center"> 
		<div class="flex flex-col justify-center items-center gap-3">
			<h1 class="lg:text-5xl text-3xl font-bold text-center">
			{t.hero.title},
		</h1>
		<h2 class="lg:text-2xl text-lg text-center text-wrap">
			Ingeniero en Ciencias Computacionales con <span class="text-[var(--blue-300)] dark:text-blue-300/90">experiencia en el 
			desarrollo fullstack, móvil e inteligencia artificial</span>
		</h2>
		<div class="flex gap-3">
			<MainIcons href="https://github.com/RicardoMolinaCoronel">
				<GitHubIcon class="size-8"/>	
			</MainIcons>
			<MainIcons href="https://www.linkedin.com/in/ricardo-duval-molina-coronel">
				<LinkedInIcon class="size-8"/>	
			</MainIcons>


	</div>
		<MainButton link="#experience" label="Construyamos algo juntos" gradient="bg-gradient-to-r from-gray-900 to-gray-700" className="pt-8"/>
	</div>
		<div class="flex flex-col items-center justify-center gap-2 mb-10 lg:mb-0">
			<div class="lg:size-96 size-72">
			  <img src="me.webp"
				   alt="imagen ricardo molina"
				   class="w-full h-full object-cover rounded-full" />
			</div>
			<span class="text-lg font-medium text-gray-600 dark:text-gray-300">Guayaquil, Ecuador</span>
			<span class="text-lg font-medium text-gray-600 dark:text-gray-300 -mt-3">23 años</span>
		  </div>
  
	

</SectionContainer>
	<SectionContainer id="experience" data-label="Experiencia" class="lg:py-44 py-30">
		<h2 class="flex flex-col lg:flex-row gap-2 pb-3 lg:gap-5 lg:text-3xl text-2xl font-semibold text-center justify-center items-center lg:justify-start mb-5">
			<DeskIcon class="lg:size-8 size-6"/>
			Experiencia</h2>
		<Experience />
	</SectionContainer>

	<SectionContainer id="projects" data-label="Proyectos" class="lg:py-44 py-30">
		<h2 class="flex flex-col lg:flex-row gap-2 pb-3 lg:gap-5 lg:text-3xl text-2xl font-semibold text-center justify-center items-center lg:justify-start mb-5">
			<CodeIcon class="size-8"/>
			Proyectos</h2>
		<Projects />
	</SectionContainer>

	<SectionContainer id="education" data-label="Educación" class="lg:py-44 py-30">
		<h2 class="flex flex-col lg:flex-row w-full gap-2 pb-3 lg:gap-5 lg:text-3xl text-2xl font-semibold text-center justify-center items-center lg:justify-start mb-5">
			<PenIcon class="size-8"/>
			Educación</h2>
		<Education />
	</SectionContainer>

	
	<SectionContainer id="technologies" data-label="Tecnologías" class="lg:py-44 py-30">
		<h2 class="flex flex-col w-full lg:flex-row gap-2 pb-3 lg:gap-5 lg:text-3xl text-2xl font-semibold text-center justify-center items-center lg:justify-start mb-5">
			<PCIcon class="size-8"/>
			Tecnologías</h2>
		<Technologies />
	</SectionContainer>

	<SectionContainer id="achievements" data-label="Logros" class="lg:py-44 py-30">
		<h2 class="flex flex-col w-full lg:flex-row gap-2 pb-3 lg:gap-5 lg:text-3xl text-2xl font-semibold text-center justify-center items-center lg:justify-start mb-5">
			<RosetteIcon class="size-8"/>
			Logros</h2>
		<Achievements />
	</SectionContainer>

	 <SectionContainer id="contact" data-label="Contacto" class="pt-5 min-h-[calc(100vh-12rem)] lg:py-10 py-30">
		<Contact />
	</SectionContainer> 
	</main>


<script is:inline>
	document.addEventListener('DOMContentLoaded', () => {
	  const labelEl = document.getElementById('section-label');
	  const span = labelEl.querySelector('span');
	  const sections = Array.from(document.querySelectorAll('section[data-label]'));
  
	  let currentLabel = "";
  
	  function getCurrentSection() {
		const viewportHeight = window.innerHeight;
		let current = null;
		let minDiff = Infinity;
  
		sections.forEach(section => {
		  const rect = section.getBoundingClientRect();
		  const diff = Math.abs(rect.top - 50); // más sensible al inicio
		  if (diff < minDiff && rect.top < viewportHeight) {
			minDiff = diff;
			current = section;
		  }
		});
  
		return current;
	  }
  
	  function updateLabel() {
		const section = getCurrentSection();
		if (!section) return;
  
		const newLabel = section.getAttribute('data-label');
		if (newLabel !== currentLabel && newLabel) {
		  currentLabel = newLabel;
  
		  // Fade out + slide down
		  span.classList.add('opacity-0', 'translate-y-2');
			console.log(section.id)
		  // Esperar a que termine la animación antes de cambiar el texto
		
			
		  setTimeout(() => {
			span.textContent = newLabel;
			// Fade in + reset slide
			span.classList.remove('translate-y-2');
			span.classList.add('translate-y-0');
			span.classList.remove('opacity-0');
		  }, 300); // Debe coincidir con duration-500 (aprox. mitad)

	}
	  }
  
	  // Ejecutar al cargar y al hacer scroll
	  updateLabel();
	  window.addEventListener('scroll', () => {
		window.requestAnimationFrame(updateLabel);
	  });
	});
  </script>
  
  
  
  
