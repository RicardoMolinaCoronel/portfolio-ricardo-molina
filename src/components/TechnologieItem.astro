---
const {name, tags, class: className, size} = Astro.props;
---

<div class="fade-section opacity-0 translate-y-5 transition-all duration-700 ease-out flex flex-col justify-start items-start gap-2 lg:py-9 py-7">
    <h3 class="flex flex-col items-start gap-2 lg:text-xl text-lg font-semibold text-gray-900 dark:text-white">
      {name}
      <div class="h-[2px] bg-[var(--primary-black)] dark:bg-gray-300 lg:w-40 w-30 mb-2"></div>
    </h3>
    <div class="flex flex-row gap-2">
      <ul class="flex flex-row flex-wrap gap-2 mt-2">
        {tags.map((tag) => (
          <li>
            <span class={`flex items-center gap-x-2 lg:text-sm text-xs rounded-full px-4 py-1 cursor-crosshair ${tag.class}`}>
              <tag.icon class={tag.size} />
              {tag.name}
            </span>
          </li>
        ))}
      </ul>
    </div>
  </div>

<script is:inline>
    // Espera que el DOM estÃ© cargado
    document.addEventListener("DOMContentLoaded", () => {
      const elements = document.querySelectorAll(".fade-section");
  
      const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
          if (entry.isIntersecting) {
            entry.target.classList.remove("opacity-0", "translate-y-5");
            observer.unobserve(entry.target); // solo una vez
          }
        });
      }, { threshold: 0.1 });
  
      elements.forEach(el => observer.observe(el));
    });
  </script>
